services:
  webserver:
    image: traefik
    ports:
      - 80:80
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.gzip.compress.excludecontenttypes=image/png, image/jpeg, font/woff2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `public`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --accesslog
      - --accesslog.format=json
      - --accesslog.fields.headers.names.X-Varnish-Routed=keep
      - --accesslog.fields.headers.names.RequestHost=keep
      - --log 
      - --log.level=DEBUG
      - --api

  frontend:
    image: plone/plone-frontend:latest
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/site
      RAZZLE_API_PATH: http://site.localhost
      DEBUG: superagent
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # service
      - traefik.http.services.svc-frontend.loadbalancer.server.port=3000
      # Router: Varnish Public 
      - traefik.http.routers.rt-frontend-public.rule=Host('site.localhost')
      - traefik.http.routers.rt-frontend-public.entrypoints=http
      - traefik.http.routers.rt-frontend-public.service=svc-varnish
      - traefik.http.routers.rt-frontend-public.middlewares=gzip
      # Router: Internal 
      - traefik.http.routers.rt-frontend-internal.rule=Host(`site.localhost`) && Headers(`X-Varnish-Routed`, `1`)
      - traefik.http.routers.rt-frontend-internal.entrypoints=http
      - traefik.http.routers.rt-frontend-internal.service=svc-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"

  backend:
    image: plone/plone-backend:6.0
    environment:
      SITE: site
      PROFILES: "plone.app.caching:with-caching-proxy"
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # service
      - traefik.http.services.svc-backend.loadbalancer.server.port=8080
      # Router: Varnish Public
      # /++api++/
      - traefik.http.routers.rt-backend-api-public.rule=Host(`site.localhost`) && PathPrefix(`/++api++`)
      - traefik.http.routers.rt-backend-api-public.entrypoints=http
      - traefik.http.routers.rt-backend-api-public.service=svc-backend
      - traefik.http.routers.rt-backend-api-public.middlewares=gzip
      # Router: Internal
      - traefik.http.routers.rt-backend-api-internal.rule=Host(`site.localhost`) && PathPrefix(`/++api++`) && Headers(`X-Varnish-Routed`, `1`)
      - traefik.http.routers.rt-backend-api-internal.entrypoints=http
      - traefik.http.routers.rt-backend-api-internal.service=svc-backend
      - traefik.http.routers.rt-backend-api-internal.middlewares=gzip,mw-backend-vhm-api
      # Classic UI 
      - traefik.http.routers.rt-backend-ui-internal.rule=Host(`site.localhost`) && PathPrefix(`/ClassicUI`) && Headers(`X-Varnish-Routed`, `1`)
      - traefik.http.routers.rt-backend-ui-internal.entrypoints=http
      - traefik.http.routers.rt-backend-ui-internal.middlewares=gzip,mw-backend-vhm-ui 
    ports:
      - "8080:8080"

  purger:
    image: ghcr.io/kitconcept/cluster-purger:latest
    platform: linux/amd64
    environment:
      PURGER_SERVICE_NAME: varnish 
      PURGER_SERVICE_PORT: 80 
      PURGER_MODE: "compose"
      PURGER_PUBLIC_SITES: "['site.localhost']"

  varnish:
    image: varnish 
    volumes:
      - ./etc/varnish.vcl:/etc/varnish/default.vcl
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service 
      - traefik.http.services.svc-varnish.loadbalancer.server.port=80 
    networks:
      default:
        aliases:
          - site.localhost
    ports:
      - "8000-8001:80"
    depends_on:
      - backend
